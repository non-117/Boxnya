# -*- coding: utf-8 -*-
import os
## 定義
# " ": 文字列 基本的に設定はダブルコーテーションで括るように下さい.
# [ ]: リスト 設定値を','区切りで書きます. 例: ["hoge","fuga","nyan"]
# { }: 辞書 {"キー1":"値1", "キー2":"値2"}のように, 設定名と設定値の組み合わせを記述します.
# True False: 真偽値.

## 基本設定
# デーモンプロセスにするかどうか. 意味がわからない場合にはFalseにすることをお勧めします.
DAEMON = False

# ログ出力を有効にするかどうか. True推奨.
LOGGING = True

# ログを保存するディレクトリ名. この設定の場合, Boxnya/log/になります.
LOG_DIR = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))),"log")

# エラーが発生した時にエラー内容を出力するOutputプラグイン名. []なら出力されません.
LOG_OUT = []

# ログ出力するプラグイン名. []ならプラグインのログ出力は行われません.
LOG_MOD = []

# 読み込むモジュール(プラグイン)の設定. []なら, Input,Filter,Outputにある全てが読み込まれます.
ENABLE_MODULES = []

## In-Out関係
# In-Filter-Outputの関係を, INOUTに定義します.
# INOUTは辞書で, Input(あるいはFilter)のモジュール名をキーに, Output(あるいはFilter)のモジュール名のリストを値にします.
# 例えば, Input1から入力して, Filter1を通してOutput1へ出力したい場合には以下のようになります.
# {"Input1":["Filter1"],
#  "Filter1":["Output1"]
# }
# もし値のリストが[]ならば, 全てのFilterあるいはOutputが出力先となります.
INOUT = {
         "twitter":["egosearch"],
         "egosearch":["favbot", "imkayac"],
         }

## モジュール(プラグイン)の設定
# モジュールの設定は辞書になっています.
# MODULE_SETTINGS = {"モジュール名1":{"設定名1":"設定値A",
#                                  "設定名2":"設定値B"},
#                    "モジュール名2":[{"設定名3":"設定値C"},{"設定名3":"設定値D"}],
#                    "モジュール名3":{"設定名4":["設定値E","設定値F"]},
#                    }
# 辞書のキーがモジュール名, 値がモジュールに設定する{"項目名":"設定値"}になります.
# もし値の部分にリストが使われると, 中にある辞書の数だけモジュールがクローンされます.
# つまり, 例のモジュール3では, 設定3に対してCが設定されたモジュールと, 設定3に対してDが設定された別々のモジュールが動きます.
# これはtwitterアカウントが複数ある場合などを想定しています.
# また, 複数設定する項目はリスト[]の中に文字列を書いてください.
# オプションとされている設定項目は書かなくても大丈夫です.

MODULE_SETTINGS = {
                  ## Inputモジュールの設定
                  # python boxnya.py init 2(2は任意の数字. アカウント数) を実行してwebブラウザから認証を行うと, 
                  # twitterの設定がこのファイルの末尾に設定が書き込まれるのでそれをコピペしてください.
                  "twitter":[
                             {'atokensecret': '', 'atoken': ''},
                             {'atokensecret': '', 'atoken': ''}
                             ],
                   
                   ## Filterモジュールの設定
                   # "twitter"から受け取った情報をフィルタリングするモジュールの設定
                   "egosearch":{
                                "screen_name":["",""], # "twitter"で設定したアカウントのスクリーンネーム
                                "regexp":"", # エゴサーチ用の正規表現
                                "disable":[], # オプション "retweet","fav","dm","list","follow","reply","egosearch"
                                             # のキーワードをリスト内に書くことでその機能を無効にできます.
                                "favsync_sources":[""], # オプション favbotと組み合わせて, fav同期されるアカウントを指定します.
                                                        # アカウント1でふぁぼると同じtweetをアカウント2でもふぁぼるといったことが可能です.
                                "favtero":False, # オプション favtero機能が使えるようになります
                                                 # @[自分のスクリーンネーム] fav [対象のスクリーンネーム] [ふぁぼる数]
                                "filterRT":False, # オプション 非公式RTを通知しないようにします
                                },
                   
                   ## Outputモジュールの設定
                   # im.kayac.comを使って通知をするための設定. passwordとsigは設定してる場合だけ入力してください.
                   # im.kayac.comを使うと, iPhoneへのPUSH通知やgoogle talkでの通知が可能です.
                   "imkayac":{
                              "username":"",
                              "password":"", # オプション
                              "sig": "" #オプション
                              },
                   # fav同期やfavテロを行うための設定. 
                   "favbot":{
                             "include":["twitter"], # "twitter"から設定をコピーしてきます.
                             "favsync_targets":[""], # オプション fav同期の対象を指定します.
                            },
                   }